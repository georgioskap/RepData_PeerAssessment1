y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sun(my_na)
sum(my_na)
my_data
0 / 0
Inf - Inf
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, narf=NA)
vect <- c(foo = 11, bar = 2, narf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector = 1:20
my_vector = c(1:20)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector )
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patiends,my_matrix)
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
exit
exit()
quit()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="data.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="data.csv",method="curl")
data <- read.csv("data.csv")
summary(data)
head(data)
hhs <- read.csv("data.csv")
summary(hhs)
str(hhs)
summary(hhs$ACR)
hhs$GK <- hhs$ACR == 3 & hhs4AGS == 6
hhs$GK <- hhs$ACR == 3 & hhs$AGS == 6
summary(hh$GK)
summary(hhs$GK)
which(hhs$GK)
library(jpeg)
install.packahes("jpeg)")
install.packahes("jpeg")
install.packages("jpeg")
library(jpeg)
jp = radJpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
jp = readJpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
jp = readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
jp = readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",method="curl")
jp = readJPEG("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile="image.jpg",method="curl")
jp = readJPEG("image.jpg")
jp = readJPEG("image.jpg",native=TRUE)
summary(jp)
head(jp)
plot(jp)
str(jp)
quantile(jp,probs=c(0.3,0.8))
file1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
file2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
downloadfile(file1,method="curl",destfile="gdp.csv")
download.file(file1,method="curl",destfile="gdp.csv")
download.file(file2,method="curl",destfile="ed.csv")
gdp <- read.csv("gdp.csv")
ed <- read.csv("ed.csv")
head(gdp)
head(ed)
str(gdp)
str(ed)
tail(gdp)
head(gdp)
head(gdp$X)
str(ed)
str(ed$CountryCode)
head(gdp$X)
str(ed$CountryCode)
str(gdp$X)
gdped <- merge(gdp,ed,by.x = "gdp$X",by.y = "ed$CountryCode")
gdped <- merge(gdp,ed,by.x = "gdp$X",by.y = "ed$CountryCode",all=TRUE)
gdped <- merge(gdp,ed,by.x = "X",by.y = "CountryCode",all=TRUE)
gdped_s <- sort(gdped$Gross.domestic.product.2012)
gdped_s[13]
gdped_s[13,]
gdped_s
head(gdped_s)
sort(gdped$Gross.domestic.product.2012)
tail(gdped)
head(gdped)
dim(gdped)
gdped <- merge(gdp,ed,by.x = "X",by.y = "CountryCode",all=TRUE,na.rm=TRUE)
dim(gdped)
?merge
gdped <- merge(gdp,ed,by.x = "X",by.y = "CountryCode",all=FALSE)
dim(gdped)
sort(gdped$Gross.domestic.product.2012)
head(gdped)
tail(gdped)
sort(gdped$Gross.domestic.product.2012,decreasing=TRUE)
tail(gdped)
gdped$Gross.domestic.product.2012
?read.csv
gdp <- read.csv("gdp.csv",skip=5)
str(gdp)
head(gdp)
gdp <- read.csv("gdp.csv",skip=5,header=FALSE)
head(gdp)
gdped <- merge(gdp,ed,by.x = "V1",by.y = "CountryCode",all=FALSE)
dim(gdped)
sort(gdped$V2,decreasing=TRUE)
tail(gdped)
gdped$V2
?sort
sort.int(gdped$V2,decreasing=TRUE)
tail(gdped)
is.unsorted(gdped)
is.unsorted(gdped$V1)
is.unsorted(gdped$V2)
is.unsorted(gdped$V3)
str(gdped)
a <- sort.int(gdped$V2,decreasing=TRUE)
head(a)
tail(a)
sort(gdped$V2,decreasing=TRUE)
gdped$V2
order(gdped$V2,decreasing=TRUE)
tail(gdped)
gdped[order(gdped$V2,decreasing=TRUE)]
gdped[order(gdped$V2,decreasing=TRUE),]
tail(gdped)
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE),]
tail(gdped_s)
tail(gdped_s,n=10)
head(gdped_s,n=10)
head(gdped_s$V2,n=10)
head(gdped_s,n=10)
gdped$V2 <- as.numeric(as.character(gdped$V2))
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE),]
tail(gdped_s,n=10)
head(gdped_s,n=10)
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE,na.last=NA),]
head(gdped_s,n=2)
tail(gdped_s,n=2)
gdped_s[12,]
gdped_s[12,1:5]
gdped_s[13,1:5]
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE,na.last=TRUE),]
gdped_s[13,1:5]
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE,na.last=FALSE),]
gdped_s[13,1:5]
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE,na.last=NA),]
gdped_s[13,1:5]
gdped_s[1:13,1:5]
dim(gdped_s)
str(gdped)
?mean
mean(gdped$V2)
mean(gdped$V2,na.rm=TRUE)
mean(gdped$V2,na.rm=TRUE)
g1 <- gdped[gdped$Income.Group == "High Income: nonOECD",]
g1
g1 <- gdped[gdped$Income.Group == "High Income: OECD",]
g1
levels(gdped$Income.Group)
g1 <- gdped[gdped$Income.Group == "High income: OECD",]
g1
g2 <- gdped[gdped$Income.Group == "High income: nonOECD",]
mean(g1$V2,na.rm=TRUE)
mean(g2$V2,na.rm=TRUE)
?quantile
quantile(gdped$V2)
quantile(gdped$V2,na.rm=FALSE)
dim(gdped)
gdped
quantile(gdped_s$V2,na.rm=FALSE)
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2), include.lowest=TRUE)))
str(gdped_sq)
gdped_sq$quantile
head(gdped_sq)
gdped_sq$quantile
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2))))
gdped_sq$quantile
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2), include.lowest=TRUE)))
quantile(gdped_s$V2)
sum(gdped_sq$quantile == 1)
sum(gdped_sq$quantile == 2)
sum(gdped_sq$quantile == 3)
sum(gdped_sq$quantile == 4)
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2, probs=(0.2,0.4,0.6,0.8,1)), include.lowest=TRUE)))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2, probs=(0.2,0.4,0.6,0.8,1)), include.lowest=TRUE)))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2, probs=(0.2,0.4,0.6,0.8,1), include.lowest=TRUE)))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2), include.lowest=TRUE)))
qunatile(gdped_s)
quantile(gdped_s)
quantile(gdped_s$V2)
quantile(gdped_s$V2,probs=0.5)
quantile(gdped_s$V2,probs=c(0.2,0.4,0.6,0.8,1))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2,probs=c(0.2,0.4,0.6,0.8,1)), include.lowest=TRUE)))
gdped_sq$quantile
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2,probs=c(0.2,0.4,0.6,0.8,1)))))
gdped_sq$quantile
table(gdped_sq$Income.Group,gdped_sq$quantile)
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2))))
table(gdped_sq$Income.Group,gdped_sq$quantile)
4+22+9+12
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2), include.lowest=TRUE)))
table(gdped_sq$Income.Group,gdped_sq$quantile)
4+23+9+12
?cut
quantile(gdped_s$V2)
?quantile
quantile(gdped_s$V2,probs=seq(0.1,0.2))
quantile(gdped_s$V2,probs=seq(0,1,0.2))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2,probs=seq(0,1,0.2))))
))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2,probs=seq(0,1,0.2)), include.lowest=TRUE)))
table(gdped_sq$Income.Group,gdped_sq$quantile)
4+18+5+11
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?pamel
?panel
?panel.axis
?panel.llines
?panel.text
?panel.points
?panel.llines
?panel.lines
?panel.axis
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.axis("GK")
xyplot(weight ~ Time | Diet, BodyWeight)
panel.axis("GK")
?panel.axis
?panel.lines
?panel.text
xyplot(weight ~ Time | Diet, BodyWeight)
panel.text("GK")
panel.text(1,1,"GK")
panel.text(10,10,"GK")
panel.text(100,100,"GK")
?panel.points
?panel.llines
?panel.text
?panel.axis
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?par
?splom
?print.trellis
?trellis.par.set
qtrellis.par.se
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
library(ggplot2)
library(qplot)
install.packages("ggplot2")
library(qplot)
library(ggplot2)
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qqplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality$Month
levels(airquality$Month)
str(airquality)
factor(airquality$Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom
?qplot
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
fileUrl = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
fileZip = "data.zip"
fileTxt = "data.txt"
if (!file.exists(fileTxt)) {
download.file(fileUrl, destfile=fileZip, method="curl")
unzip(fileZip)
}
setwd("~/Dropbox/Projects/Learning/5. Reproducible Research/Exercises/Project 1")
fileUrl = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
fileZip = "activity.zip"
fileTxt = "activity.csv"
if (!file.exists(fileTxt)) {
download.file(fileUrl,  method="curl")
unzip(fileZip)
}
fileUrl = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
fileZip = "activity.zip"
fileTxt = "activity.csv"
if (!file.exists(fileTxt)) {
download.file(fileUrl, destfile=fileZip, method="curl")
unzip(fileZip)
}
activity <- read.csv("activity.csv")
summary(activity)
heaD(activity)
head(activity)
dim(activity)
setwd("~/Dropbox/Projects/Learning/5. Reproducible Research/Exercises/Project 1/RepData_PeerAssessment1")
fileZip = "activity.zip"
fileTxt = "activity.csv"
if (!file.exists(fileZip)) {
unzip(fileZip)
}
fileZip = "activity.zip"
fileTxt = "activity.csv"
if (!file.exists(fileTxt)) {
unzip(fileZip)
}
activity <- data.table(read.csv(fileTxt))
library(data.table)
library(ggplot2)
### Unzip data if needed
fileZip = "activity.zip"
fileTxt = "activity.csv"
if (!file.exists(fileTxt)) {
unzip(fileZip)
}
### Read data
activity <- data.table(read.csv(fileTxt))
activity_days <- dt[by = c("date")]
}
head(activity)
summary(activity)
activity_days <- dt[, list(totalSteps=sum(steps)), by = c("date")]
activity_days <- activity[, list(totalSteps=sum(steps)), by = c("date")]
activity_days
?data.table
activity[is.na(activity)] <- 0
activity_days <- activity[, list(totalSteps=sum(steps)), by = c("date")]
activity_days
activity <- data.table(read.csv(fileTxt))
activity_days <- activity[, list(totalSteps=sum(steps)), by = c("date")]
hist(activity_days)
ggplot(activity_days, aes(date, totalSteps)) +  + ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
ggplot(activity_days, aes(date, totalSteps)) +  ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
ggplot(activity_days, aes(date, totalSteps)) + geom_histogram() +  ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
ggplot(activity_days, aes(date, totalSteps)) + geom_bar() +  ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
?ggplot
ggplot(activity_days, aes(y = totalSteps)) + geom_bar() +  ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
ggplot(activity_days, aes(x = date, y = totalSteps)) + geom_bar() +  ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
ggplot(activity_days, aes(x = date, y = totalSteps), stat="identity") + geom_bar() +  ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
ggplot(activity_days, aes(y = totalSteps), stat="identity") + geom_hist() +  ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
ggplot(activity_days, aes(y = totalSteps), stat="identity") + geom_histogram() +  ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
qplot(totalSteps, data=activity_days, geom="histogram")
ggplot(activity_days, aes(x = totalSteps), stat="identity") + geom_histogram() +  ylab("Total Steps") + xlab("Day") + ggtitle("Total Steps by Day")
qplot(totalSteps, data=activity_days, geom="histogram")
mean(activity_days$totalSteps)
mean(activity_days$totalSteps, na.rm=TRUE)
median(activity_days$totalSteps, na.rm=TRUE)
qplot(totalSteps, data=activity_days, geom="histogram", binwidth = 5)
qplot(totalSteps, data=activity_days, geom="histogram", binwidth = 50)
qplot(totalSteps, data=activity_days, geom="histogram", binwidth = 1000)
qplot(totalSteps, data=activity_days, geom="histogram", binwidth = 2000)
qplot(totalSteps, data=activity_days, geom="histogram", binwidth = 1000)
axtivity_interval <- activity[, list(averageSteps=mean(steps, na.rm = TRUE)), by = c("interval")]
activity_interval <- activity[, list(averageSteps=mean(steps, na.rm = TRUE)), by = c("interval")]
qplot(totalSteps, data=averageSteps, geom="line")
fileTxt = "activity.csv"
qplot(averageSteps, data=activity_interval, geom="line")
qqplot(activity_interval, aes(interval, averageSteps)) + geom_line()
ggplot(activity_interval, aes(interval, averageSteps)) + geom_line()
dim(activity_interval)
=24*60/5
24*60/5
ggplot(activity_interval, aes(interval, averageSteps)) + geom_line() + xlab("Steps per Interval (average over days with activity") + ylab("Interval (5 minutes)")
ggplot(activity_interval, aes(interval, averageSteps)) + geom_line() + ylab("Steps per Interval (average over days with activity") + xlab("Interval (5 minutes)")
ggplot(activity_interval, aes(interval, averageSteps)) + geom_line() + ylab("Steps (average over days with activity") + xlab("Interval (5 minutes)")
?which
which[min(activity_interval$averageSteps)]
min(activity_interval$averageSteps)
mAx(activity_interval$averageSteps)
max(activity_interval$averageSteps)
activity_interval[activity_interval$averageSteps=max(activity_interval$averageSteps)]$interval
activity_interval[activity_interval$averageSteps==max(activity_interval$averageSteps)]$interval
ggplot(activity_interval, aes(interval, averageSteps)) + geom_line() + ylab("Steps (average over days with activity") + xlab("Interval (5 minutes)")
activity_interval[activity_interval$averageSteps==max(activity_interval$averageSteps)]
sum(is.na(activity))
sum(is.na(activity_days))
sum(is.na(activity))
?merg
?merge
activity_estimated[is.na(activity_estimated$steps)]$steps
activity_estimated <- activity
activity_estimated[is.na(activity_estimated$steps)]$steps
activity_estimated[is.na(activity_estimated$steps)]$interval
activity_estimated[is.na(activity_estimated$steps)]$steps <- activity_interval[activity_interval$interval == activity_estimated$interval]
activity_estimated[is.na(activity_estimated$steps)]$steps <- activity_interval[activity_interval$interval == activity_estimated$interval]
activity_estimated[is.na(activity_estimated$steps)]$steps <- 1
activity_interval[activity_interval$interval == activity_estimated$interval]
activity_estimated[is.na(activity_estimated$steps)]$steps <- activity_interval[activity_interval$interval == activity_estimated[is.na(activity_estimated$steps)]$interval]
head(activity_estimated)
activity_estimated <- activity
activity_estimated[is.na(activity_estimated$steps)]$steps <- activity_interval[activity_interval$interval == activity_estimated[is.na(activity_estimated$steps)]$interval]
activity_estimated[is.na(activity_estimated$steps)]$steps <- activity_interval[activity_interval$interval == activity_estimated[is.na(activity_estimated$steps)]$interval]$averageSteps
activity_estimated[is.na(activity_estimated$steps)]$steps <- int(activity_interval[activity_interval$interval == activity_estimated[is.na(activity_estimated$steps)]$interval]$averageSteps)
activity_estimated[is.na(activity_estimated$steps)]$steps <- to_integer(activity_interval[activity_interval$interval == activity_estimated[is.na(activity_estimated$steps)]$interval]$averageSteps)
activity_estimated[is.na(activity_estimated$steps)]$steps <- as.integer(activity_interval[activity_interval$interval == activity_estimated[is.na(activity_estimated$steps)]$interval]$averageSteps)
head(activity_estimated)
activity_estimated_interval <- activity_estimated[, list(averageSteps=mean(steps, na.rm = TRUE)), by = c("interval")]
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + geom_line() + ylab("Steps (average over days with activity") + xlab("Interval (5 minutes)")
activity_interval[activity_interval$averageSteps==max(activity_interval$averageSteps)]
activity_interval[activity_interval$averageSteps==max(activity_interval$averageSteps)]$averageSteps
activity_estimated_interval[activity_estimated_interval$averageSteps==max(activity_estimated_interval$averageSteps)]$averageSteps
activity_estimated_days <- activity_estimated[, list(totalSteps=sum(steps)), by = c("date")]
qplot(totalSteps, data=activity__estimated_days, geom="histogram")
mean(activity_estimated_days$totalSteps, na.rm=TRUE)
median(activity_estimated_days$totalSteps, na.rm=TRUE)
qplot(totalSteps, data=activity__estimated_days, geom="histogram")
activity_estimated_days <- activity_estimated[, list(totalSteps=sum(steps)), by = c("date")]
qplot(totalSteps, data=activity__estimated_days, geom="histogram")
qplot(totalSteps, data=activity_estimated_days, geom="histogram")
qplot(totalSteps, data=activity_days, geom="histogram")
mean(activity_days$totalSteps, na.rm=TRUE)
median(activity_days$totalSteps, na.rm=TRUE)
mean(activity_estimated_days$totalSteps, na.rm=TRUE)
median(activity_estimated_days$totalSteps, na.rm=TRUE)
activity_estimated_days$datetype <- weekdays(activity_estimated_days$date)
?weekdays
weekdays(activity_estimated_days$date)
weekdays(activity_estimated_days$dates)
activity_estimated_days
weekdays(activity_estimated_days$date)
?Date
weekdays(as.Date(activity_estimated_days$date, "%Y-%m-%d")
)
weekdays(as.Date(activity_estimated_days$date, "%Y-%m-%d")) in c("Saturday", "Sunday")
weekdays(as.Date(activity_estimated_days$date, "%Y-%m-%d")) %in% c("Saturday", "Sunday")
activity_estimated_days$datetype <- "weekday"
head(activity_estimated_days)
activity_estimated_days[weekdays(as.Date(activity_estimated_days$date, "%Y-%m-%d")) %in% c("Saturday", "Sunday")]$datetype <- "weekend"
head(activity_estimated_days)
activity_estimated$datetype <- "weekday"
activity_estimated[weekdays(as.Date(activity_estimated$date, "%Y-%m-%d")) %in% c("Saturday", "Sunday")]$datetype <- "weekend"
activity_interval <- activity_estimated[, list(averageSteps=mean(steps, na.rm = TRUE)), by = c("date_type, interval")]
activity_interval <- activity_estimated[, list(averageSteps=mean(steps, na.rm = TRUE)), by = c("datetype, interval")]
activity_interval <- activity_estimated[, list(averageSteps=mean(steps, na.rm = TRUE)), by = c("datetype", "interval")]
ggplot(activity_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype) + geom_line() + ylab("Steps (average over days with activity") + xlab("Interval (5 minutes)")
ggplot(activity_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype) + geom_line(color = datetype) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype) + geom_line(color = . ~ datetype) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype) + geom_line(color = activity_estimated_interval$datetype) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype) + geom_line() + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(activity_estimated_interval$datetype) + geom_line() + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
activity_estimated$datetype <- "weekday"
activity_estimated[weekdays(as.Date(activity_estimated$date, "%Y-%m-%d")) %in% c("Saturday", "Sunday")]$datetype <- "weekend"
activity_estimated_interval <- activity_estimated[, list(averageSteps=mean(steps, na.rm = TRUE)), by = c("datetype", "interval")]
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype) + geom_line() + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype) + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype, nrow=2, ncol=1) + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype) + facet_wrap(nrow=2, ncol=1) + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_wrap(. ~ datetype, nrow=2, ncol=1) + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps))  + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(. ~ datetype, nrow=2, ncol=1) + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(datetype . ~) + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(datetype ~ .) + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(datetype ~ .) + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)") + guides(fill=FALSE)
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(datetype ~ .) + geom_line(aes(color = datetype)) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)") + guides(fill=FALSE)
ggplot(activity_estimated_interval, aes(interval, averageSteps)) + facet_grid(datetype ~ .) + geom_line(aes(color = datetype), show_guide=FALSE) + ylab("Steps (average daily)") + xlab("Interval (5 minutes)")
